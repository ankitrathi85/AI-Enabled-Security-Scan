# Environment Variables for AI-Enhanced Security Framework
# Copy this to .env and fill in your actual API keys
#
# üîí SECURITY NOTICE:
# - This file contains EXAMPLE/PLACEHOLDER values safe for committing to git
# - The actual .env file with real secrets should NEVER be committed
# - Default Juice Shop credentials below are for OWASP Juice Shop ONLY
# - For testing other applications, always use proper secure test credentials

# =============================================================================
# AI Configuration
# =============================================================================

# AI Provider Selection
# Options: groq, openai, anthropic, ollama
AI_PROVIDER=ollama

# API Keys (only needed for cloud providers)
GROQ_API_KEY=your_groq_api_key_here
OPENAI_API_KEY=your-openai-api-key-here
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# General AI Settings
AI_ENABLED=true
AI_MAX_TOKENS=2000
AI_TEMPERATURE=0.3
AI_TIMEOUT=30000

# Ollama Configuration (for local LLM)
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_TIMEOUT=120000
# Popular models: mistral, codellama, llama2, llama3, phi, gemma
AI_MODEL=mistral

# Cloud AI Models (when not using Ollama)
# For GROQ: llama3-8b-8192, llama3-70b-8192, mixtral-8x7b-32768
# For OpenAI: gpt-4, gpt-4-turbo, gpt-3.5-turbo
# AI_MODEL=llama3-8b-8192

# AI Rate Limit Management
# Note: These limits are relaxed for Ollama (local) but strict for cloud APIs
# Maximum vulnerabilities to analyze with AI
AI_MAX_VULNERABILITIES=100
# Batch size for processing
AI_BATCH_SIZE=25
# Delay between individual requests (milliseconds)
AI_DELAY_MS=500
# Delay between batches (milliseconds) 
AI_BATCH_DELAY_MS=1000
# Token limit before using fallback summary
AI_TOKEN_LIMIT=20000
# Enable rule-based fallback when hitting limits
AI_ENABLE_FALLBACK=true

# AI Feature Toggles
AI_VULNERABILITY_ANALYSIS=true
AI_FALSE_POSITIVE_DETECTION=true
AI_RISK_ASSESSMENT=true
AI_REMEDIATION=true
AI_BUSINESS_IMPACT=true
AI_EXECUTIVE_SUMMARY=true
AI_TREND_ANALYSIS=true

# AI Fallback Configuration
AI_FALLBACK_ENABLED=true
AI_FALLBACK_PROVIDER=local

# =============================================================================
# Target Application Configuration
# =============================================================================
JUICE_SHOP_URL=http://localhost:3000
JUICE_SHOP_TIMEOUT=30000

# OWASP Juice Shop Test Credentials
# ‚ö†Ô∏è  SECURITY WARNING: These are the default OWASP Juice Shop credentials!
# ‚ö†Ô∏è  ONLY use these for testing against OWASP Juice Shop application
# ‚ö†Ô∏è  NEVER use default credentials in production applications!
# ‚ö†Ô∏è  For testing other applications, use proper test credentials
JUICE_SHOP_ADMIN_EMAIL=admin@juice-sh.op
JUICE_SHOP_ADMIN_PASSWORD=admin123
JUICE_SHOP_TEST_EMAIL=test@juice-sh.op  
JUICE_SHOP_TEST_PASSWORD=test123

# For testing OTHER applications, use these format instead:
# JUICE_SHOP_ADMIN_EMAIL=your_test_admin@yourdomain.com
# JUICE_SHOP_ADMIN_PASSWORD=your_secure_test_password_here

# =============================================================================
# OWASP ZAP Configuration
# =============================================================================
ZAP_HOST=localhost
ZAP_PORT=8080
ZAP_PROTOCOL=http
ZAP_API_HOST=localhost
ZAP_API_PORT=8080
ZAP_API_KEY=optional-zap-api-key

# ZAP Scan Policies
ZAP_QUICK_POLICY=Default Policy
ZAP_COMPREHENSIVE_POLICY=Full Scan Policy
ZAP_ACTIVE_SCAN_POLICY=Default Policy

# ZAP Mode Configuration
# Options: auto (default), safe, standard, attack
# - auto: Uses 'standard' for active scans, 'safe' for passive only
# - safe: Only passive scanning, no active attacks
# - standard: Allows active scanning with standard policies  
# - attack: Most aggressive scanning mode
ZAP_MODE=auto

# ZAP Spider Configuration
ZAP_SPIDER_ENABLED=true
ZAP_SPIDER_MAX_DEPTH=5
ZAP_SPIDER_MAX_CHILDREN=10
ZAP_SPIDER_RECURSE=true
ZAP_CONTEXT_NAME=JuiceShop

# ZAP Active Scan Configuration
ZAP_ACTIVE_SCAN_ENABLED=true

# ZAP Passive Scan Configuration
ZAP_PASSIVE_SCAN_ENABLED=true
ZAP_SCAN_METHOD=GET
ZAP_ACTIVE_SCAN_RECURSE=true

# =============================================================================
# Playwright Browser Configuration
# =============================================================================
PLAYWRIGHT_HEADLESS=false
PLAYWRIGHT_TIMEOUT=30000
PLAYWRIGHT_WIDTH=1920
PLAYWRIGHT_HEIGHT=1080
PLAYWRIGHT_IGNORE_HTTPS=true
PLAYWRIGHT_VIDEO=retain-on-failure
PLAYWRIGHT_SCREENSHOT=only-on-failure
PLAYWRIGHT_USER_AGENT=Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36 SecurityFramework/1.0
PLAYWRIGHT_ARGS=--start-maximized,--disable-web-security

# =============================================================================
# Reporting Configuration
# =============================================================================
REPORT_OUTPUT_DIR=./reports
INCLUDE_AI_ANALYSIS=true
REPORT_FORMATS=html,json
REPORT_TEMPLATE=enhanced
REPORT_TITLE=AI-Enhanced Security Assessment
REPORT_COMPANY=Security Team
REPORT_LOGO=

# =============================================================================
# Framework Configuration
# =============================================================================
NODE_ENV=development
LOG_LEVEL=info
LOG_CONSOLE=true
LOG_FILE=false
LOG_TIMESTAMP=true

# Optional: Development & Debug Settings
DEBUG=false
VERBOSE=false

# Optional: Custom Test Scenarios (comma-separated)
# TEST_SCENARIOS=login,registration,product-search,cart-operations,admin-access
